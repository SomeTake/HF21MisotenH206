//=============================================================================
//
// ストック使用不可イベントクラス [BanStockUseEvent.cpp]
// Author : HAL東京 GP12B332 41 頼凱興
//
//=============================================================================
#include "../../../main.h"
#include "BanStockUseEvent.h"

//*****************************************************************************
// マクロ定義
//*****************************************************************************


//*****************************************************************************
// スタティック変数宣言
//*****************************************************************************


//=============================================================================
// コンストラクタ
//=============================================================================
BanStockUseEvent::BanStockUseEvent(int RemainTime) : RemainTime(RemainTime)
{
	// ストック使用封印
	fieldController->SealUsingItem(true);
}

//=============================================================================
// デストラクタ
//=============================================================================
BanStockUseEvent::~BanStockUseEvent()
{

}

//=============================================================================
// 更新
//=============================================================================
void BanStockUseEvent::Update()
{
	RemainTime--;
	if (RemainTime <= 0)
	{
		// 封印解除
		fieldController->SealUsingItem(false);
		UseFlag = false;
	}
}

//=============================================================================
// 描画
//=============================================================================
void BanStockUseEvent::Draw()
{

}

//=============================================================================
// イベントメッセージを取得
//=============================================================================
string BanStockUseEvent::GetEventMessage(int FieldLevel)
{
	vector<string> MessageContainer;

	if (FieldLevel == Field::Model::City)
	{
		MessageContainer.push_back("ストック使用禁止イベント");
	}
	else if (FieldLevel == Field::Model::World)
	{

	}
	else if (FieldLevel == Field::Model::Space)
	{

	}

	if (!MessageContainer.empty())
	{
		int MessageNo = rand() % MessageContainer.size();
		return MessageContainer.at(MessageNo);
	}
	else
	{
		string ErrMsg = "イベントメッセージがありません";
		return ErrMsg;
	}
}
